#pragma once
#include <iostream>
using namespace std;
#include <string>
// Библиотека для потоков, работающих с файлами
#include <fstream>
// Библиотека для динамических массивов
#include <vector>

// Общие функции, расширенные (реализованные) в general_functions.cpp
int count(char, string);

// Классы, расширенные (реализованные) в classes.cpp

/* Общее правило для классов в заголовке: поля указываются с именами,
   аргументы методов без имён. Сами методы и значения полей не указываются,
   а расширяются (реализовываются) в каком-нибудь исходнике (файле .cpp)*/

/* Матрица инцидентности - матрица, в которой по столбцам записаны рёбра,
	а по строкам - вершины, и если какая-то вершина инцидентна (т. е. соединена)
	с ребром, то на пересечении соответствующих столбца и строки стоит 1, иначе 0
	(пример см. example_graph.png) */
class Matrix_incidence {
	/* Поля приватные, т. е. недоступны вне класса, вся работа с ними
       исключительно с помощью методов класса (по канонам ООП)*/
	int amount_edges, amount_vertices;
	int** matrix;
public:
	Matrix_incidence(int, int);
	void set_row(int, int*);
	void set_column(int, int*);
};

/* Список (списков) смежности - двумерный массив, в котором для каждой вершины
   записаны номера вершин, смежных ей (т. е. соединённых ребром). При этом индекс
   является номером вершины, т. е. в list[0] записаны вершины, смежные с вершиной 0*/
class List_adjacency {
	int amount_vertices, last;
	vector<vector<int>> list;
public:
	List_adjacency(int);
	void add_list(int, int, int*);
	vector<vector<int>> to_edges_array();
};